{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"canvas\"];\nconst _c1 = [\"rLabel\"];\nconst _c2 = [\"reading\"];\n\nfunction NgxGauge_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\n\nfunction NgxGauge_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.prepend);\n  }\n}\n\nfunction NgxGauge_ng_content_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\n\nfunction NgxGauge_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r4.value));\n  }\n}\n\nfunction NgxGauge_ng_content_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\n\nfunction NgxGauge_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.append);\n  }\n}\n\nfunction NgxGauge_ng_content_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\n\nfunction NgxGauge_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.label);\n  }\n}\n\nconst _c3 = [[[\"ngx-gauge-prepend\"]], [[\"ngx-gauge-value\"]], [[\"ngx-gauge-append\"]], [[\"ngx-gauge-label\"]]];\nconst _c4 = [\"ngx-gauge-prepend\", \"ngx-gauge-value\", \"ngx-gauge-append\", \"ngx-gauge-label\"];\n\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\nfunction coerceBooleanProperty(value) {\n  return value != null && `${value}` !== 'false';\n}\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n  return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n\nfunction cssUnit(value) {\n  return `${value}px`;\n}\n\nfunction isNumber(value) {\n  return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\nclass NgxGaugeAppend {}\n\nNgxGaugeAppend.ɵfac = function NgxGaugeAppend_Factory(t) {\n  return new (t || NgxGaugeAppend)();\n};\n\nNgxGaugeAppend.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxGaugeAppend,\n  selectors: [[\"ngx-gauge-append\"]],\n  exportAs: [\"ngxGaugeAppend\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugeAppend, [{\n    type: Directive,\n    args: [{\n      selector: \"ngx-gauge-append\",\n      exportAs: \"ngxGaugeAppend\"\n    }]\n  }], null, null);\n})();\n\nclass NgxGaugePrepend {}\n\nNgxGaugePrepend.ɵfac = function NgxGaugePrepend_Factory(t) {\n  return new (t || NgxGaugePrepend)();\n};\n\nNgxGaugePrepend.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxGaugePrepend,\n  selectors: [[\"ngx-gauge-prepend\"]],\n  exportAs: [\"ngxGaugePrepend\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugePrepend, [{\n    type: Directive,\n    args: [{\n      selector: \"ngx-gauge-prepend\",\n      exportAs: \"ngxGaugePrepend\"\n    }]\n  }], null, null);\n})();\n\nclass NgxGaugeValue {}\n\nNgxGaugeValue.ɵfac = function NgxGaugeValue_Factory(t) {\n  return new (t || NgxGaugeValue)();\n};\n\nNgxGaugeValue.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxGaugeValue,\n  selectors: [[\"ngx-gauge-value\"]],\n  exportAs: [\"ngxGaugeValue\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugeValue, [{\n    type: Directive,\n    args: [{\n      selector: \"ngx-gauge-value\",\n      exportAs: \"ngxGaugeValue\"\n    }]\n  }], null, null);\n})();\n\nclass NgxGaugeLabel {}\n\nNgxGaugeLabel.ɵfac = function NgxGaugeLabel_Factory(t) {\n  return new (t || NgxGaugeLabel)();\n};\n\nNgxGaugeLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxGaugeLabel,\n  selectors: [[\"ngx-gauge-label\"]],\n  exportAs: [\"ngxGaugeLabel\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugeLabel, [{\n    type: Directive,\n    args: [{\n      selector: \"ngx-gauge-label\",\n      exportAs: \"ngxGaugeLabel\"\n    }]\n  }], null, null);\n})();\n\nconst DEFAULTS = {\n  MIN: 0,\n  MAX: 100,\n  TYPE: 'arch',\n  THICK: 4,\n  FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n  BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n  CAP: 'butt',\n  SIZE: 200\n};\n\nclass NgxGauge {\n  constructor(_elementRef, _renderer) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._size = DEFAULTS.SIZE;\n    this._min = DEFAULTS.MIN;\n    this._max = DEFAULTS.MAX;\n    this._animate = true;\n    this._initialized = false;\n    this._animationRequestID = 0;\n    this.ariaLabel = '';\n    this.ariaLabelledby = null;\n    this.type = DEFAULTS.TYPE;\n    this.cap = DEFAULTS.CAP;\n    this.thick = DEFAULTS.THICK;\n    this.foregroundColor = DEFAULTS.FOREGROUND_COLOR;\n    this.backgroundColor = DEFAULTS.BACKGROUND_COLOR;\n    this.thresholds = Object.create(null);\n    this._value = 0;\n    this.duration = 1200;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  set size(value) {\n    this._size = coerceNumberProperty(value);\n  }\n\n  get min() {\n    return this._min;\n  }\n\n  set min(value) {\n    this._min = coerceNumberProperty(value, DEFAULTS.MIN);\n  }\n\n  get animate() {\n    return this._animate;\n  }\n\n  set animate(value) {\n    this._animate = coerceBooleanProperty(value);\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  set max(value) {\n    this._max = coerceNumberProperty(value, DEFAULTS.MAX);\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = coerceNumberProperty(val);\n  }\n\n  ngOnChanges(changes) {\n    const isCanvasPropertyChanged = changes['thick'] || changes['type'] || changes['cap'] || changes['size'];\n    const isDataChanged = changes['value'] || changes['min'] || changes['max'];\n\n    if (this._initialized) {\n      if (isDataChanged) {\n        let nv, ov;\n\n        if (changes['value']) {\n          nv = changes['value'].currentValue;\n          ov = changes['value'].previousValue;\n        }\n\n        this._update(nv, ov);\n      }\n\n      if (isCanvasPropertyChanged) {\n        this._destroy();\n\n        this._init();\n      }\n    }\n  }\n\n  _updateSize() {\n    this._renderer.setStyle(this._elementRef.nativeElement, 'width', cssUnit(this._getWidth()));\n\n    this._renderer.setStyle(this._elementRef.nativeElement, 'height', cssUnit(this._getCanvasHeight()));\n\n    this._canvas.nativeElement.width = this._getWidth();\n    this._canvas.nativeElement.height = this._getCanvasHeight();\n\n    this._renderer.setStyle(this._label.nativeElement, 'transform', 'translateY(' + (this.size / 3 * 2 - this.size / 13 / 4) + 'px)');\n\n    this._renderer.setStyle(this._reading.nativeElement, 'transform', 'translateY(' + (this.size / 2 - this.size * 0.22 / 2) + 'px)');\n  }\n\n  ngAfterViewInit() {\n    if (this._canvas) {\n      this._init();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy();\n  }\n\n  _getBounds(type) {\n    let head, tail;\n\n    if (type == 'semi') {\n      head = Math.PI;\n      tail = 2 * Math.PI;\n    } else if (type == 'full') {\n      head = 1.5 * Math.PI;\n      tail = 3.5 * Math.PI;\n    } else if (type === 'arch') {\n      head = 0.8 * Math.PI;\n      tail = 2.2 * Math.PI;\n    }\n\n    return {\n      head,\n      tail\n    };\n  }\n\n  _drawShell(start, middle, tail, color) {\n    let center = this._getCenter(),\n        radius = this._getRadius();\n\n    middle = Math.max(middle, start); // never below 0%\n\n    middle = Math.min(middle, tail); // never exceed 100%\n\n    if (this._initialized) {\n      this._clear();\n\n      this._context.beginPath();\n\n      this._context.strokeStyle = this.backgroundColor;\n\n      this._context.arc(center.x, center.y, radius, middle, tail, false);\n\n      this._context.stroke();\n\n      this._context.beginPath();\n\n      this._context.strokeStyle = color;\n\n      this._context.arc(center.x, center.y, radius, start, middle, false);\n\n      this._context.stroke();\n    }\n  }\n\n  _clear() {\n    this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\n  }\n\n  _getWidth() {\n    return this.size;\n  }\n\n  _getHeight() {\n    return this.size;\n  } // canvas height will be shorter for type 'semi' and 'arch'\n\n\n  _getCanvasHeight() {\n    return this.type == 'arch' || this.type == 'semi' ? 0.85 * this._getHeight() : this._getHeight();\n  }\n\n  _getRadius() {\n    var center = this._getCenter();\n\n    return center.x - this.thick;\n  }\n\n  _getCenter() {\n    var x = this._getWidth() / 2,\n        y = this._getHeight() / 2;\n    return {\n      x,\n      y\n    };\n  }\n\n  _init() {\n    this._context = this._canvas.nativeElement.getContext('2d');\n    this._initialized = true;\n\n    this._updateSize();\n\n    this._setupStyles();\n\n    this._create();\n  }\n\n  _destroy() {\n    if (this._animationRequestID) {\n      window.cancelAnimationFrame(this._animationRequestID);\n      this._animationRequestID = 0;\n    }\n\n    this._clear();\n\n    this._context = null;\n    this._initialized = false;\n  }\n\n  _setupStyles() {\n    this._context.lineCap = this.cap;\n    this._context.lineWidth = this.thick;\n  }\n\n  _getForegroundColorByRange(value) {\n    const match = Object.keys(this.thresholds).filter(function (item) {\n      return isNumber(item) && Number(item) <= value;\n    }).sort((a, b) => Number(a) - Number(b)).reverse()[0];\n    return match !== undefined ? this.thresholds[match].color || this.foregroundColor : this.foregroundColor;\n  }\n\n  _create(nv, ov) {\n    let self = this,\n        type = this.type,\n        bounds = this._getBounds(type),\n        duration = this.duration,\n        min = this.min,\n        max = this.max,\n        value = clamp(this.value, this.min, this.max),\n        start = bounds.head,\n        unit = (bounds.tail - bounds.head) / (max - min),\n        displacement = unit * (value - min),\n        tail = bounds.tail,\n        color = this._getForegroundColorByRange(value),\n        startTime;\n\n    if (self._animationRequestID) {\n      window.cancelAnimationFrame(self._animationRequestID);\n    }\n\n    function animate(timestamp) {\n      timestamp = timestamp || new Date().getTime();\n      let runtime = timestamp - startTime;\n      let progress = Math.min(runtime / duration, 1);\n      let previousProgress = ov ? (ov - min) * unit : 0;\n      let middle = start + previousProgress + displacement * progress;\n\n      self._drawShell(start, middle, tail, color);\n\n      if (self._animationRequestID && runtime < duration) {\n        self._animationRequestID = window.requestAnimationFrame(timestamp => animate(timestamp));\n      } else {\n        window.cancelAnimationFrame(self._animationRequestID);\n      }\n    }\n\n    if (this._animate) {\n      if (nv != undefined && ov != undefined) {\n        displacement = unit * nv - unit * ov;\n      }\n\n      self._animationRequestID = window.requestAnimationFrame(timestamp => {\n        startTime = timestamp || new Date().getTime();\n        animate(startTime);\n      });\n    } else {\n      self._drawShell(start, start + displacement, tail, color);\n    }\n  }\n\n  _update(nv, ov) {\n    this._clear();\n\n    this._create(nv, ov);\n  }\n\n}\n\nNgxGauge.ɵfac = function NgxGauge_Factory(t) {\n  return new (t || NgxGauge)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNgxGauge.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxGauge,\n  selectors: [[\"ngx-gauge\"]],\n  contentQueries: function NgxGauge_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxGaugeLabel, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgxGaugePrepend, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgxGaugeAppend, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgxGaugeValue, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prependChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._appendChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueDisplayChild = _t.first);\n    }\n  },\n  viewQuery: function NgxGauge_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(_c2, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._canvas = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._label = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._reading = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", \"aria-readonly\", \"true\"],\n  hostVars: 7,\n  hostBindings: function NgxGauge_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n      i0.ɵɵclassProp(\"ngx-gauge-meter\", true);\n    }\n  },\n  inputs: {\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    size: \"size\",\n    min: \"min\",\n    animate: \"animate\",\n    max: \"max\",\n    type: \"type\",\n    cap: \"cap\",\n    thick: \"thick\",\n    label: \"label\",\n    append: \"append\",\n    prepend: \"prepend\",\n    foregroundColor: \"foregroundColor\",\n    backgroundColor: \"backgroundColor\",\n    thresholds: \"thresholds\",\n    value: \"value\",\n    duration: \"duration\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c4,\n  decls: 17,\n  vars: 16,\n  consts: [[1, \"reading-block\"], [\"reading\", \"\"], [1, \"reading-affix\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"ngSwitch\"], [1, \"reading-label\", 3, \"ngSwitch\"], [\"rLabel\", \"\"], [\"canvas\", \"\"]],\n  template: function NgxGauge_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c3);\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵelementStart(2, \"u\", 2);\n      i0.ɵɵtemplate(3, NgxGauge_ng_content_3_Template, 1, 0, \"ng-content\", 3);\n      i0.ɵɵtemplate(4, NgxGauge_ng_container_4_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerStart(5, 4);\n      i0.ɵɵtemplate(6, NgxGauge_ng_content_6_Template, 1, 0, \"ng-content\", 3);\n      i0.ɵɵtemplate(7, NgxGauge_ng_container_7_Template, 3, 3, \"ng-container\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementStart(8, \"u\", 2);\n      i0.ɵɵtemplate(9, NgxGauge_ng_content_9_Template, 1, 0, \"ng-content\", 3);\n      i0.ɵɵtemplate(10, NgxGauge_ng_container_10_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5, 6);\n      i0.ɵɵtemplate(13, NgxGauge_ng_content_13_Template, 1, 0, \"ng-content\", 3);\n      i0.ɵɵtemplate(14, NgxGauge_ng_container_14_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"canvas\", null, 7);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"font-size\", ctx.size * 0.22 + \"px\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngSwitch\", ctx._prependChild != null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx._valueDisplayChild != null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx._appendChild != null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"font-size\", ctx.size / 13 + \"px\");\n      i0.ɵɵproperty(\"ngSwitch\", ctx._labelChild != null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n    }\n  },\n  directives: [i1.NgSwitch, i1.NgSwitchCase],\n  pipes: [i1.DecimalPipe],\n  styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block,.reading-label{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;display:inline-block}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGauge, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-gauge',\n      templateUrl: 'gauge.html',\n      styleUrls: ['gauge.css'],\n      host: {\n        'role': 'slider',\n        'aria-readonly': 'true',\n        '[class.ngx-gauge-meter]': 'true',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-label]': 'ariaLabel',\n        '[attr.aria-labelledby]': 'ariaLabelledby'\n      },\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    _canvas: [{\n      type: ViewChild,\n      args: ['canvas', {\n        static: true\n      }]\n    }],\n    _label: [{\n      type: ViewChild,\n      args: ['rLabel', {\n        static: true\n      }]\n    }],\n    _reading: [{\n      type: ViewChild,\n      args: ['reading', {\n        static: true\n      }]\n    }],\n    _labelChild: [{\n      type: ContentChild,\n      args: [NgxGaugeLabel]\n    }],\n    _prependChild: [{\n      type: ContentChild,\n      args: [NgxGaugePrepend]\n    }],\n    _appendChild: [{\n      type: ContentChild,\n      args: [NgxGaugeAppend]\n    }],\n    _valueDisplayChild: [{\n      type: ContentChild,\n      args: [NgxGaugeValue]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    size: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    cap: [{\n      type: Input\n    }],\n    thick: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    append: [{\n      type: Input\n    }],\n    prepend: [{\n      type: Input\n    }],\n    foregroundColor: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    thresholds: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    duration: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgxGaugeModule {}\n\nNgxGaugeModule.ɵfac = function NgxGaugeModule_Factory(t) {\n  return new (t || NgxGaugeModule)();\n};\n\nNgxGaugeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxGaugeModule\n});\nNgxGaugeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxGaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\n      exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public APIs of ngx-gauge\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgxGauge, NgxGaugeAppend, NgxGaugeLabel, NgxGaugeModule, NgxGaugePrepend, NgxGaugeValue };","map":{"version":3,"sources":["C:/CODING/rnhealth/node_modules/ngx-gauge/fesm2015/ngx-gauge.js"],"names":["i0","Directive","Component","ViewEncapsulation","ViewChild","ContentChild","Input","NgModule","i1","CommonModule","clamp","value","min","max","Math","coerceBooleanProperty","coerceNumberProperty","fallbackValue","isNaN","parseFloat","Number","cssUnit","isNumber","undefined","NgxGaugeAppend","ɵfac","ɵdir","type","args","selector","exportAs","NgxGaugePrepend","NgxGaugeValue","NgxGaugeLabel","DEFAULTS","MIN","MAX","TYPE","THICK","FOREGROUND_COLOR","BACKGROUND_COLOR","CAP","SIZE","NgxGauge","constructor","_elementRef","_renderer","_size","_min","_max","_animate","_initialized","_animationRequestID","ariaLabel","ariaLabelledby","cap","thick","foregroundColor","backgroundColor","thresholds","Object","create","_value","duration","size","animate","val","ngOnChanges","changes","isCanvasPropertyChanged","isDataChanged","nv","ov","currentValue","previousValue","_update","_destroy","_init","_updateSize","setStyle","nativeElement","_getWidth","_getCanvasHeight","_canvas","width","height","_label","_reading","ngAfterViewInit","ngOnDestroy","_getBounds","head","tail","PI","_drawShell","start","middle","color","center","_getCenter","radius","_getRadius","_clear","_context","beginPath","strokeStyle","arc","x","y","stroke","clearRect","_getHeight","getContext","_setupStyles","_create","window","cancelAnimationFrame","lineCap","lineWidth","_getForegroundColorByRange","match","keys","filter","item","sort","a","b","reverse","self","bounds","unit","displacement","startTime","timestamp","Date","getTime","runtime","progress","previousProgress","requestAnimationFrame","ElementRef","Renderer2","ɵcmp","NgSwitch","NgSwitchCase","DecimalPipe","templateUrl","styleUrls","host","encapsulation","None","static","_labelChild","_prependChild","_appendChild","_valueDisplayChild","label","append","prepend","NgxGaugeModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && `${value}` !== 'false';\r\n}\r\nfunction coerceNumberProperty(value, fallbackValue = 0) {\r\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\r\n}\r\nfunction cssUnit(value) {\r\n    return `${value}px`;\r\n}\r\nfunction isNumber(value) {\r\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\r\n}\n\nclass NgxGaugeAppend {\r\n}\r\nNgxGaugeAppend.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeAppend, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\nNgxGaugeAppend.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.1.4\", type: NgxGaugeAppend, selector: \"ngx-gauge-append\", exportAs: [\"ngxGaugeAppend\"], ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeAppend, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"ngx-gauge-append\",\r\n                    exportAs: \"ngxGaugeAppend\"\r\n                }]\r\n        }] });\r\nclass NgxGaugePrepend {\r\n}\r\nNgxGaugePrepend.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugePrepend, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\nNgxGaugePrepend.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.1.4\", type: NgxGaugePrepend, selector: \"ngx-gauge-prepend\", exportAs: [\"ngxGaugePrepend\"], ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugePrepend, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"ngx-gauge-prepend\",\r\n                    exportAs: \"ngxGaugePrepend\"\r\n                }]\r\n        }] });\r\nclass NgxGaugeValue {\r\n}\r\nNgxGaugeValue.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeValue, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\nNgxGaugeValue.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.1.4\", type: NgxGaugeValue, selector: \"ngx-gauge-value\", exportAs: [\"ngxGaugeValue\"], ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeValue, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"ngx-gauge-value\",\r\n                    exportAs: \"ngxGaugeValue\"\r\n                }]\r\n        }] });\r\nclass NgxGaugeLabel {\r\n}\r\nNgxGaugeLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\nNgxGaugeLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.1.4\", type: NgxGaugeLabel, selector: \"ngx-gauge-label\", exportAs: [\"ngxGaugeLabel\"], ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeLabel, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: \"ngx-gauge-label\",\r\n                    exportAs: \"ngxGaugeLabel\"\r\n                }]\r\n        }] });\n\nconst DEFAULTS = {\r\n    MIN: 0,\r\n    MAX: 100,\r\n    TYPE: 'arch',\r\n    THICK: 4,\r\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\r\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\r\n    CAP: 'butt',\r\n    SIZE: 200\r\n};\r\nclass NgxGauge {\r\n    constructor(_elementRef, _renderer) {\r\n        this._elementRef = _elementRef;\r\n        this._renderer = _renderer;\r\n        this._size = DEFAULTS.SIZE;\r\n        this._min = DEFAULTS.MIN;\r\n        this._max = DEFAULTS.MAX;\r\n        this._animate = true;\r\n        this._initialized = false;\r\n        this._animationRequestID = 0;\r\n        this.ariaLabel = '';\r\n        this.ariaLabelledby = null;\r\n        this.type = DEFAULTS.TYPE;\r\n        this.cap = DEFAULTS.CAP;\r\n        this.thick = DEFAULTS.THICK;\r\n        this.foregroundColor = DEFAULTS.FOREGROUND_COLOR;\r\n        this.backgroundColor = DEFAULTS.BACKGROUND_COLOR;\r\n        this.thresholds = Object.create(null);\r\n        this._value = 0;\r\n        this.duration = 1200;\r\n    }\r\n    get size() { return this._size; }\r\n    set size(value) {\r\n        this._size = coerceNumberProperty(value);\r\n    }\r\n    get min() { return this._min; }\r\n    set min(value) {\r\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\r\n    }\r\n    get animate() { return this._animate; }\r\n    set animate(value) {\r\n        this._animate = coerceBooleanProperty(value);\r\n    }\r\n    get max() { return this._max; }\r\n    set max(value) {\r\n        this._max = coerceNumberProperty(value, DEFAULTS.MAX);\r\n    }\r\n    get value() { return this._value; }\r\n    set value(val) {\r\n        this._value = coerceNumberProperty(val);\r\n    }\r\n    ngOnChanges(changes) {\r\n        const isCanvasPropertyChanged = changes['thick'] || changes['type'] || changes['cap'] || changes['size'];\r\n        const isDataChanged = changes['value'] || changes['min'] || changes['max'];\r\n        if (this._initialized) {\r\n            if (isDataChanged) {\r\n                let nv, ov;\r\n                if (changes['value']) {\r\n                    nv = changes['value'].currentValue;\r\n                    ov = changes['value'].previousValue;\r\n                }\r\n                this._update(nv, ov);\r\n            }\r\n            if (isCanvasPropertyChanged) {\r\n                this._destroy();\r\n                this._init();\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        this._renderer.setStyle(this._elementRef.nativeElement, 'width', cssUnit(this._getWidth()));\r\n        this._renderer.setStyle(this._elementRef.nativeElement, 'height', cssUnit(this._getCanvasHeight()));\r\n        this._canvas.nativeElement.width = this._getWidth();\r\n        this._canvas.nativeElement.height = this._getCanvasHeight();\r\n        this._renderer.setStyle(this._label.nativeElement, 'transform', 'translateY(' + (this.size / 3 * 2 - this.size / 13 / 4) + 'px)');\r\n        this._renderer.setStyle(this._reading.nativeElement, 'transform', 'translateY(' + (this.size / 2 - this.size * 0.22 / 2) + 'px)');\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this._canvas) {\r\n            this._init();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroy();\r\n    }\r\n    _getBounds(type) {\r\n        let head, tail;\r\n        if (type == 'semi') {\r\n            head = Math.PI;\r\n            tail = 2 * Math.PI;\r\n        }\r\n        else if (type == 'full') {\r\n            head = 1.5 * Math.PI;\r\n            tail = 3.5 * Math.PI;\r\n        }\r\n        else if (type === 'arch') {\r\n            head = 0.8 * Math.PI;\r\n            tail = 2.2 * Math.PI;\r\n        }\r\n        return { head, tail };\r\n    }\r\n    _drawShell(start, middle, tail, color) {\r\n        let center = this._getCenter(), radius = this._getRadius();\r\n        middle = Math.max(middle, start); // never below 0%\r\n        middle = Math.min(middle, tail); // never exceed 100%\r\n        if (this._initialized) {\r\n            this._clear();\r\n            this._context.beginPath();\r\n            this._context.strokeStyle = this.backgroundColor;\r\n            this._context.arc(center.x, center.y, radius, middle, tail, false);\r\n            this._context.stroke();\r\n            this._context.beginPath();\r\n            this._context.strokeStyle = color;\r\n            this._context.arc(center.x, center.y, radius, start, middle, false);\r\n            this._context.stroke();\r\n        }\r\n    }\r\n    _clear() {\r\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\r\n    }\r\n    _getWidth() {\r\n        return this.size;\r\n    }\r\n    _getHeight() {\r\n        return this.size;\r\n    }\r\n    // canvas height will be shorter for type 'semi' and 'arch'\r\n    _getCanvasHeight() {\r\n        return (this.type == 'arch' || this.type == 'semi')\r\n            ? 0.85 * this._getHeight()\r\n            : this._getHeight();\r\n    }\r\n    _getRadius() {\r\n        var center = this._getCenter();\r\n        return center.x - this.thick;\r\n    }\r\n    _getCenter() {\r\n        var x = this._getWidth() / 2, y = this._getHeight() / 2;\r\n        return { x, y };\r\n    }\r\n    _init() {\r\n        this._context = this._canvas.nativeElement.getContext('2d');\r\n        this._initialized = true;\r\n        this._updateSize();\r\n        this._setupStyles();\r\n        this._create();\r\n    }\r\n    _destroy() {\r\n        if (this._animationRequestID) {\r\n            window.cancelAnimationFrame(this._animationRequestID);\r\n            this._animationRequestID = 0;\r\n        }\r\n        this._clear();\r\n        this._context = null;\r\n        this._initialized = false;\r\n    }\r\n    _setupStyles() {\r\n        this._context.lineCap = this.cap;\r\n        this._context.lineWidth = this.thick;\r\n    }\r\n    _getForegroundColorByRange(value) {\r\n        const match = Object.keys(this.thresholds)\r\n            .filter(function (item) { return isNumber(item) && Number(item) <= value; })\r\n            .sort((a, b) => Number(a) - Number(b))\r\n            .reverse()[0];\r\n        return match !== undefined\r\n            ? this.thresholds[match].color || this.foregroundColor\r\n            : this.foregroundColor;\r\n    }\r\n    _create(nv, ov) {\r\n        let self = this, type = this.type, bounds = this._getBounds(type), duration = this.duration, min = this.min, max = this.max, value = clamp(this.value, this.min, this.max), start = bounds.head, unit = (bounds.tail - bounds.head) / (max - min), displacement = unit * (value - min), tail = bounds.tail, color = this._getForegroundColorByRange(value), startTime;\r\n        if (self._animationRequestID) {\r\n            window.cancelAnimationFrame(self._animationRequestID);\r\n        }\r\n        function animate(timestamp) {\r\n            timestamp = timestamp || new Date().getTime();\r\n            let runtime = timestamp - startTime;\r\n            let progress = Math.min(runtime / duration, 1);\r\n            let previousProgress = ov ? (ov - min) * unit : 0;\r\n            let middle = start + previousProgress + displacement * progress;\r\n            self._drawShell(start, middle, tail, color);\r\n            if (self._animationRequestID && (runtime < duration)) {\r\n                self._animationRequestID = window.requestAnimationFrame((timestamp) => animate(timestamp));\r\n            }\r\n            else {\r\n                window.cancelAnimationFrame(self._animationRequestID);\r\n            }\r\n        }\r\n        if (this._animate) {\r\n            if (nv != undefined && ov != undefined) {\r\n                displacement = unit * nv - unit * ov;\r\n            }\r\n            self._animationRequestID = window.requestAnimationFrame((timestamp) => {\r\n                startTime = timestamp || new Date().getTime();\r\n                animate(startTime);\r\n            });\r\n        }\r\n        else {\r\n            self._drawShell(start, start + displacement, tail, color);\r\n        }\r\n    }\r\n    _update(nv, ov) {\r\n        this._clear();\r\n        this._create(nv, ov);\r\n    }\r\n}\r\nNgxGauge.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGauge, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\r\nNgxGauge.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.1.4\", type: NgxGauge, selector: \"ngx-gauge\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], size: \"size\", min: \"min\", animate: \"animate\", max: \"max\", type: \"type\", cap: \"cap\", thick: \"thick\", label: \"label\", append: \"append\", prepend: \"prepend\", foregroundColor: \"foregroundColor\", backgroundColor: \"backgroundColor\", thresholds: \"thresholds\", value: \"value\", duration: \"duration\" }, host: { attributes: { \"role\": \"slider\", \"aria-readonly\": \"true\" }, properties: { \"class.ngx-gauge-meter\": \"true\", \"attr.aria-valuemin\": \"min\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuenow\": \"value\", \"attr.aria-label\": \"ariaLabel\", \"attr.aria-labelledby\": \"ariaLabelledby\" } }, queries: [{ propertyName: \"_labelChild\", first: true, predicate: NgxGaugeLabel, descendants: true }, { propertyName: \"_prependChild\", first: true, predicate: NgxGaugePrepend, descendants: true }, { propertyName: \"_appendChild\", first: true, predicate: NgxGaugeAppend, descendants: true }, { propertyName: \"_valueDisplayChild\", first: true, predicate: NgxGaugeValue, descendants: true }], viewQueries: [{ propertyName: \"_canvas\", first: true, predicate: [\"canvas\"], descendants: true, static: true }, { propertyName: \"_label\", first: true, predicate: [\"rLabel\"], descendants: true, static: true }, { propertyName: \"_reading\", first: true, predicate: [\"reading\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"reading-block\\\" #reading [style.fontSize]=\\\"size * 0.22 + 'px'\\\">\\r\\n  <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\\r\\n  <u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_prependChild != null\\\"><ng-content select=\\\"ngx-gauge-prepend\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\\\"_valueDisplayChild != null\\\"><ng-content *ngSwitchCase=\\\"true\\\" select=\\\"ngx-gauge-value\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{value | number}}</ng-container></ng-container><u class=\\\"reading-affix\\\" [ngSwitch]=\\\"_appendChild != null\\\"><ng-content select=\\\"ngx-gauge-append\\\" *ngSwitchCase=\\\"true\\\"></ng-content><ng-container *ngSwitchCase=\\\"false\\\">{{append}}</ng-container></u>\\r\\n</div>\\r\\n<div class=\\\"reading-label\\\" #rLabel\\r\\n     [style.fontSize]=\\\"size / 13 + 'px'\\\"\\r\\n     [ngSwitch]=\\\"_labelChild != null\\\">\\r\\n  <ng-content select=\\\"ngx-gauge-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\r\\n  <ng-container *ngSwitchCase=\\\"false\\\">{{label}}</ng-container>\\r\\n</div>\\r\\n<canvas #canvas></canvas>\\r\\n\", styles: [\".ngx-gauge-meter{display:inline-block;text-align:center;position:relative}.reading-block,.reading-label{position:absolute;width:100%;font-weight:400;white-space:nowrap;text-align:center;overflow:hidden;text-overflow:ellipsis}.reading-label{font-family:inherit;display:inline-block}.reading-affix{text-decoration:none;font-size:.6em;opacity:.8;font-weight:200;padding:0 .18em}.reading-affix:first-child{padding-left:0}.reading-affix:last-child{padding-right:0}\"], directives: [{ type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], pipes: { \"number\": i1.DecimalPipe }, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGauge, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ngx-gauge',\r\n                    templateUrl: 'gauge.html',\r\n                    styleUrls: ['gauge.css'],\r\n                    host: {\r\n                        'role': 'slider',\r\n                        'aria-readonly': 'true',\r\n                        '[class.ngx-gauge-meter]': 'true',\r\n                        '[attr.aria-valuemin]': 'min',\r\n                        '[attr.aria-valuemax]': 'max',\r\n                        '[attr.aria-valuenow]': 'value',\r\n                        '[attr.aria-label]': 'ariaLabel',\r\n                        '[attr.aria-labelledby]': 'ariaLabelledby'\r\n                    },\r\n                    encapsulation: ViewEncapsulation.None\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { _canvas: [{\r\n                type: ViewChild,\r\n                args: ['canvas', { static: true }]\r\n            }], _label: [{\r\n                type: ViewChild,\r\n                args: ['rLabel', { static: true }]\r\n            }], _reading: [{\r\n                type: ViewChild,\r\n                args: ['reading', { static: true }]\r\n            }], _labelChild: [{\r\n                type: ContentChild,\r\n                args: [NgxGaugeLabel]\r\n            }], _prependChild: [{\r\n                type: ContentChild,\r\n                args: [NgxGaugePrepend]\r\n            }], _appendChild: [{\r\n                type: ContentChild,\r\n                args: [NgxGaugeAppend]\r\n            }], _valueDisplayChild: [{\r\n                type: ContentChild,\r\n                args: [NgxGaugeValue]\r\n            }], ariaLabel: [{\r\n                type: Input,\r\n                args: ['aria-label']\r\n            }], ariaLabelledby: [{\r\n                type: Input,\r\n                args: ['aria-labelledby']\r\n            }], size: [{\r\n                type: Input\r\n            }], min: [{\r\n                type: Input\r\n            }], animate: [{\r\n                type: Input\r\n            }], max: [{\r\n                type: Input\r\n            }], type: [{\r\n                type: Input\r\n            }], cap: [{\r\n                type: Input\r\n            }], thick: [{\r\n                type: Input\r\n            }], label: [{\r\n                type: Input\r\n            }], append: [{\r\n                type: Input\r\n            }], prepend: [{\r\n                type: Input\r\n            }], foregroundColor: [{\r\n                type: Input\r\n            }], backgroundColor: [{\r\n                type: Input\r\n            }], thresholds: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], duration: [{\r\n                type: Input\r\n            }] } });\n\nclass NgxGaugeModule {\r\n}\r\nNgxGaugeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxGaugeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeModule, declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel], imports: [CommonModule], exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel] });\r\nNgxGaugeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeModule, imports: [[CommonModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.4\", ngImport: i0, type: NgxGaugeModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\r\n                    exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\r\n                }]\r\n        }] });\n\n/*\r\n * Public APIs of ngx-gauge\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxGauge, NgxGaugeAppend, NgxGaugeLabel, NgxGaugeModule, NgxGaugePrepend, NgxGaugeValue };\n"]},"metadata":{},"sourceType":"module"}