{"ast":null,"code":"import { transform } from \"ol/proj\"; //import {Class} from \"leaflet\";\n\nimport { Mesure } from \"../../models/Mesure\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/rest-api.service\";\nimport * as i2 from \"ngx-gauge\";\nexport let StatisticsComponent = /*#__PURE__*/(() => {\n  class StatisticsComponent {\n    constructor(_restApiService) {\n      this._restApiService = _restApiService;\n      this.value1 = 65;\n      this.value2 = 35;\n      this.value3 = 3;\n      this.value4 = 62;\n      this.value5 = 38;\n      this.value6 = 6;\n      this.gaugeAppendText = \"%\";\n      this.color1 = \"#009900\";\n      this.color2 = \"#ff9900\";\n      this.color3 = \"#ff3300\";\n      this.label1 = \"Buildings\";\n      this.label2 = \"Measurements\";\n      this.boxSize = 140;\n      this.xinf = -1057600.28;\n      this.yinf = 4433489.72;\n      this.xdelta = 650;\n      this.ydelta = 658;\n      this.corX = 0;\n      this.corY = 0;\n      this.info = [];\n    }\n\n    ngOnInit() {}\n\n    getRadon() {\n      var counter = 0;\n\n      for (let i = 0; i < 580; i++) {\n        this.corX = this.xinf + this.xdelta * i;\n\n        for (let j = 550; j < 600; j++) {\n          this.corY = this.yinf + this.ydelta * j; //setTimeout(=>{}, ++counter * 500);\n\n          setTimeout(() => {\n            this.getRadiometry(this.corX, this.corY, i * 10000 + j);\n          }, ++counter * 20); //this.getRadiometry(this.corX,this.corY,i*10000+j);\n        }\n      }\n\n      console.log(this.info);\n    }\n\n    getRadiometry(x, y, id) {\n      this._restApiService.getRadiometry(x, y, x - 5, y - 5, x + 5, y + 5).subscribe(data => {\n        var LonLat = transform([x, y], 'EPSG:3857', 'EPSG:4326');\n\n        if (data.results.length > 0 && data.results[0].attributes['Stretch.Pixel Value'] != 'NoData') {\n          let costumObj = new Mesure(id, LonLat, data.results[0].attributes['Stretch.Pixel Value']); //console.log(costumObj);\n\n          this.info.push(costumObj); //let myInf=new Mesure();\n          //myInf.LonLat=LonLat;\n          //myInf.pixel=data.results[0].attributes['Stretch.Pixel Value'];//.toString().replace(\",\",\".\")\n          //console.log(myInf);\n          //this.info.push(myInf);\n          //console.log(this.info);\n          //console.log(data.results[0].attributes['Stretch.Pixel Value'].toString().replace(\",\",\".\")+ 'Lon: '+LonLat[0]+' Lat: '+LonLat[1])\n        }\n      });\n    }\n\n  }\n\n  StatisticsComponent.ɵfac = function StatisticsComponent_Factory(t) {\n    return new (t || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.RestApiService));\n  };\n\n  StatisticsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"app-statistics\"]],\n    decls: 76,\n    vars: 36,\n    consts: [[1, \"container\", \"py-4\", \"mt-3\", 2, \"background-color\", \"lightgrey\"], [1, \"row\", \"mb-5\"], [1, \"col-md-4\", \"col-12\"], [1, \"card\", \"text-white\", \"bg-primary\", \"mb-2\", \"text-center\", \"mx-auto\", 2, \"max-width\", \"15rem\"], [1, \"card-header\", \"py-1\"], [1, \"card-title\"], [1, \"card-body\", \"py-2\"], [1, \"col-md-4\", \"col-12\", \"mx-auto\"], [1, \"col-md-4\", \"col-6\", \"mx-auto\"], [1, \"card\", \"text-white\", \"bg-secondary\", \"mb-2\", \"text-center\", \"mx-auto\", 2, \"max-width\", \"15rem\"], [1, \"col-md-4\", \"col-16\"], [1, \"row\"], [1, \"col-md-2\", \"col-6\", \"text-center\"], [3, \"value\", \"append\", \"thick\", \"foregroundColor\", \"label\", \"size\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Buildings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"h2\", 5);\n        i0.ɵɵtext(9, \"58\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵelementStart(13, \"h5\", 5);\n        i0.ɵɵtext(14, \"Measurements\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 6);\n        i0.ɵɵelementStart(16, \"h2\", 5);\n        i0.ɵɵtext(17, \"354\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 8);\n        i0.ɵɵelementStart(19, \"div\", 3);\n        i0.ɵɵelementStart(20, \"div\", 4);\n        i0.ɵɵelementStart(21, \"h5\", 5);\n        i0.ɵɵtext(22, \"Sensor Max Value\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 6);\n        i0.ɵɵelementStart(24, \"h2\", 5);\n        i0.ɵɵtext(25, \"21,000 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 1);\n        i0.ɵɵelementStart(27, \"div\", 2);\n        i0.ɵɵelementStart(28, \"div\", 9);\n        i0.ɵɵelementStart(29, \"div\", 4);\n        i0.ɵɵelementStart(30, \"h5\", 5);\n        i0.ɵɵtext(31, \"Building Average\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 6);\n        i0.ɵɵelementStart(33, \"h2\", 5);\n        i0.ɵɵtext(34, \"282 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 7);\n        i0.ɵɵelementStart(36, \"div\", 9);\n        i0.ɵɵelementStart(37, \"div\", 4);\n        i0.ɵɵelementStart(38, \"h5\", 5);\n        i0.ɵɵtext(39, \"Building Max Average\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 6);\n        i0.ɵɵelementStart(41, \"h2\", 5);\n        i0.ɵɵtext(42, \"1,036 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 10);\n        i0.ɵɵelementStart(44, \"div\", 9);\n        i0.ɵɵelementStart(45, \"div\", 4);\n        i0.ɵɵelementStart(46, \"h5\", 5);\n        i0.ɵɵtext(47, \"Building Min Average\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"div\", 6);\n        i0.ɵɵelementStart(49, \"h2\", 5);\n        i0.ɵɵtext(50, \"29 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 11);\n        i0.ɵɵelementStart(52, \"div\", 12);\n        i0.ɵɵelementStart(53, \"h4\");\n        i0.ɵɵtext(54, \"< 300 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(55, \"ngx-gauge\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 12);\n        i0.ɵɵelementStart(57, \"h4\");\n        i0.ɵɵtext(58, \"> 300 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"ngx-gauge\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"div\", 12);\n        i0.ɵɵelementStart(61, \"h4\");\n        i0.ɵɵtext(62, \"> 900 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(63, \"ngx-gauge\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"div\", 12);\n        i0.ɵɵelementStart(65, \"h4\");\n        i0.ɵɵtext(66, \"< 300 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(67, \"ngx-gauge\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"div\", 12);\n        i0.ɵɵelementStart(69, \"h4\");\n        i0.ɵɵtext(70, \"> 300 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(71, \"ngx-gauge\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"div\", 12);\n        i0.ɵɵelementStart(73, \"h4\");\n        i0.ɵɵtext(74, \"> 900 Bq/m3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(75, \"ngx-gauge\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(55);\n        i0.ɵɵproperty(\"value\", ctx.value1)(\"append\", ctx.gaugeAppendText)(\"thick\", 10)(\"foregroundColor\", ctx.color1)(\"label\", ctx.label1)(\"size\", ctx.boxSize);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.value2)(\"append\", ctx.gaugeAppendText)(\"thick\", 10)(\"foregroundColor\", ctx.color2)(\"label\", ctx.label1)(\"size\", ctx.boxSize);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.value3)(\"append\", ctx.gaugeAppendText)(\"thick\", 10)(\"foregroundColor\", ctx.color3)(\"label\", ctx.label1)(\"size\", ctx.boxSize);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.value4)(\"append\", ctx.gaugeAppendText)(\"thick\", 10)(\"foregroundColor\", ctx.color1)(\"label\", ctx.label2)(\"size\", ctx.boxSize);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.value5)(\"append\", ctx.gaugeAppendText)(\"thick\", 10)(\"foregroundColor\", ctx.color2)(\"label\", ctx.label2)(\"size\", ctx.boxSize);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.value6)(\"append\", ctx.gaugeAppendText)(\"thick\", 10)(\"foregroundColor\", ctx.color3)(\"label\", ctx.label2)(\"size\", ctx.boxSize);\n      }\n    },\n    directives: [i2.NgxGauge],\n    styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column;height:100vh}.map-container[_ngcontent-%COMP%]{flex-grow:1}\"]\n  });\n  return StatisticsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}