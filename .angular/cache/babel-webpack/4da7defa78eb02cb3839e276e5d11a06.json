{"ast":null,"code":"/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft'\n};\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\n\nvar unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES\n};\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\n\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\n\nexport var METERS_PER_UNIT = {}; // use the radius of the Normal sphere\n\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units; //# sourceMappingURL=Units.js.map","map":null,"metadata":{},"sourceType":"module"}